From 81609ad878c2fdd3c62c4a42ed3290860e880997 Mon Sep 17 00:00:00 2001
From: Philippe Coval <philippe.coval@osg.samsung.com>
Date: Thu, 19 Apr 2018 23:12:44 +0200
Subject: [PATCH] WIP: tizenrt: Add minimal app for TizenRT

Based in linux app, this can be imported to:
TizenRT/apps/example/iotivity_constrainted_example

Bug: https://jira.iotivity.org/browse/LITE-4
Change-Id: Ia45abb8ce2e8da03f18a01694a22919d2d9bf3a7
Origin: https://github.com/TizenTeam/iotivity-constrained/tree/sandbox/rzr/tizenrt/master
Signed-off-by: Philippe Coval <philippe.coval@osg.samsung.com>
---
 .../examples/iotivity_constrained_example/Kconfig  |  27 ++++
 .../iotivity_constrained_example/Kconfig_ENTRY     |   3 +
 .../iotivity_constrained_example/Make.defs         |  56 +++++++
 .../examples/iotivity_constrained_example/Makefile | 116 ++++++++++++++
 .../examples/iotivity_constrained_example/main.c   | 170 +++++++++++++++++++++
 5 files changed, 372 insertions(+)
 create mode 100644 tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig
 create mode 100644 tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig_ENTRY
 create mode 100644 tests/port/tizenrt/examples/iotivity_constrained_example/Make.defs
 create mode 100644 tests/port/tizenrt/examples/iotivity_constrained_example/Makefile
 create mode 100644 tests/port/tizenrt/examples/iotivity_constrained_example/main.c

diff --git a/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig b/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig
new file mode 100644
index 00000000..bf148907
--- /dev/null
+++ b/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig
@@ -0,0 +1,27 @@
+#
+# For a description of the syntax of this configuration file,
+# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
+#
+
+config EXAMPLES_IOTIVITY_CONSTRAINED
+	bool "iotivity_constrained_example"
+	select ENABLE_IOTIVITY_CONSTRAINED
+	default n
+	---help---
+		Enable the iotivity_constrainted_example
+
+if EXAMPLES_IOTIVITY_CONSTRAINED
+
+config EXAMPLES_IOTIVITY_CONSTRAINED_PROGNAME
+	string "Program name"
+	default "iotivity_constrained_example"
+	depends on BUILD_KERNEL
+	---help---
+		This is the name of the program that will be use when the TASH ELF
+		program is installed.
+
+endif
+
+config USER_ENTRYPOINT
+	string
+	default "iotivity_constrained_example_main" if ENTRY_IOTIVITY_CONSTRAINED_EXAMPLE
diff --git a/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig_ENTRY b/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig_ENTRY
new file mode 100644
index 00000000..b1299c25
--- /dev/null
+++ b/tests/port/tizenrt/examples/iotivity_constrained_example/Kconfig_ENTRY
@@ -0,0 +1,3 @@
+config ENTRY_IOTIVITY_CONSTRAINED_EXAMPLE
+	bool "IoTivitiy constrained example"
+	depends on EXAMPLES_IOTIVITY_CONSTRAINED
diff --git a/tests/port/tizenrt/examples/iotivity_constrained_example/Make.defs b/tests/port/tizenrt/examples/iotivity_constrained_example/Make.defs
new file mode 100644
index 00000000..2ffb4ab5
--- /dev/null
+++ b/tests/port/tizenrt/examples/iotivity_constrained_example/Make.defs
@@ -0,0 +1,56 @@
+###########################################################################
+#
+# Copyright 2017 Samsung Electronics All Rights Reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
+# either express or implied. See the License for the specific
+# language governing permissions and limitations under the License.
+#
+###########################################################################
+############################################################################
+# apps/examples/hello/Make.defs
+# Adds selected applications to apps/ build
+#
+#   Copyright (C) 2015 Gregory Nutt. All rights reserved.
+#   Author: Gregory Nutt <gnutt@nuttx.org>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+ifeq ($(CONFIG_EXAMPLES_IOTIVITY_CONSTRAINED),y)
+CONFIGURED_APPS += examples/iotivity_constrained_example
+endif
diff --git a/tests/port/tizenrt/examples/iotivity_constrained_example/Makefile b/tests/port/tizenrt/examples/iotivity_constrained_example/Makefile
new file mode 100644
index 00000000..c6ed62b0
--- /dev/null
+++ b/tests/port/tizenrt/examples/iotivity_constrained_example/Makefile
@@ -0,0 +1,116 @@
+############################################################################
+#
+# Copyright 2018 Samsung Electronics France SAS, All Rights Reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
+# either express or implied. See the License for the specific
+# language governing permissions and limitations under the License.
+#
+############################################################################
+
+-include $(TOPDIR)/.config
+-include $(TOPDIR)/Make.defs
+include $(APPDIR)/Make.defs
+
+# built-in application info
+
+TIZENRT_BASE_DIR ?= ${TOPDIR}/..
+APPNAME = iotivity_constrained_example
+FUNCNAME = ${APPNAME}_main
+CONFIG_EXAMPLES_IOTIVITY_CONSTRAINED_PROGNAME ?= ${APPNAME}$(EXEEXT)
+PROGNAME = $(CONFIG_EXAMPLES_IOTIVITY_CONSTRAINED_PROGNAME)
+THREADEXEC = TASH_EXECMD_SYNC
+
+ASRCS =
+CSRCS =
+MAINSRC = main.c
+
+IOTIVITY_CONSTRAINED_BASE_DIR ?= ${TIZENRT_BASE_DIR}/external/iotivity-constrained
+CFLAGS += -I$(IOTIVITY_CONSTRAINED_BASE_DIR)
+CFLAGS += -I$(IOTIVITY_CONSTRAINED_BASE_DIR)/include
+CFLAGS += -I$(IOTIVITY_CONSTRAINED_BASE_DIR)/port/tizenrt/
+CFLAGS += -I.
+
+AOBJS = $(ASRCS:.S=$(OBJEXT))
+COBJS = $(CSRCS:.c=$(OBJEXT))
+MAINOBJ = $(MAINSRC:.c=$(OBJEXT))
+
+SRCS = $(ASRCS) $(CSRCS) $(MAINSRC)
+OBJS = $(AOBJS) $(COBJS)
+
+ifneq ($(CONFIG_BUILD_KERNEL),y)
+OBJS += $(MAINOBJ)
+endif
+
+BIN = ${TIZENRT_BASE_DIR}/apps/libapps$(LIBEXT)
+INSTALL_DIR = $(BIN_DIR)
+
+
+ROOTDEPPATH = --dep-path .
+
+# Common build
+
+VPATH =
+
+all: .built
+.PHONY: clean depend distclean
+
+$(AOBJS): %$(OBJEXT): %.S
+	$(call ASSEMBLE, $<, $@)
+
+$(COBJS) $(MAINOBJ): %$(OBJEXT): %.c
+	$(call COMPILE, $<, $@)
+
+.built: $(OBJS)
+	$(call ARCHIVE, $(BIN), $(OBJS))
+	@touch .built
+
+ifeq ($(CONFIG_BUILD_KERNEL),y)
+$(BIN_DIR)$(DELIM)$(PROGNAME): $(OBJS) $(MAINOBJ)
+	@echo "LD: $(PROGNAME)"
+	$(Q) $(LD) $(LDELFFLAGS) $(LDLIBPATH) -o $(INSTALL_DIR)$(DELIM)$(PROGNAME) $(ARCHCRT0OBJ) $(MAINOBJ) $(LDLIBS)
+	$(Q) $(NM) -u  $(INSTALL_DIR)$(DELIM)$(PROGNAME)
+
+install: $(BIN_DIR)$(DELIM)$(PROGNAME)
+
+else
+install:
+
+endif
+
+ifeq ($(CONFIG_BUILTIN_APPS)$(CONFIG_EXAMPLES_IOTIVITY_CONSTRAINED),yy)
+$(BUILTIN_REGISTRY)$(DELIM)$(FUNCNAME).bdat: $(DEPCONFIG) Makefile
+	$(Q) $(call REGISTER,$(APPNAME),$(FUNCNAME),$(THREADEXEC),$(PRIORITY),$(STACKSIZE))
+
+context: $(BUILTIN_REGISTRY)$(DELIM)$(FUNCNAME).bdat
+
+else
+context:
+
+endif
+
+.depend: Makefile $(SRCS)
+	@$(MKDEP) $(ROOTDEPPATH) "$(CC)" -- $(CFLAGS) -- $(SRCS) >Make.dep
+	@touch $@
+
+depend: .depend
+
+clean:
+	$(call DELFILE, .built)
+	$(call CLEAN)
+
+distclean: clean
+	$(call DELFILE, Make.dep)
+	$(call DELFILE, .depend)
+
+-include Make.dep
+.PHONY: preconfig
+preconfig:
diff --git a/tests/port/tizenrt/examples/iotivity_constrained_example/main.c b/tests/port/tizenrt/examples/iotivity_constrained_example/main.c
new file mode 100644
index 00000000..01e386cf
--- /dev/null
+++ b/tests/port/tizenrt/examples/iotivity_constrained_example/main.c
@@ -0,0 +1,170 @@
+/*
+// Copyright 2018 Samsung Electronics France All Rights Reserved.
+// Copyright (c) 2016 Intel Corporation
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+*/
+#include <tinyara/config.h>
+
+#include "oc_api.h"
+#include "port/oc_clock.h"
+
+#include <pthread.h>
+#include <signal.h>
+#include <stdio.h>
+
+static pthread_mutex_t mutex;
+static pthread_cond_t cv;
+static struct timespec ts;
+static int quit = 0;
+static bool light_state = false;
+
+static void
+set_device_custom_property(void *data)
+{
+  (void)data;
+  oc_set_custom_device_property(purpose, "desk lamp");
+}
+
+static int
+app_init(void)
+{
+  int ret = oc_init_platform("Intel", NULL, NULL);
+  ret |= oc_add_device("/oic/d", "oic.d.light", "Kishen's light", "ocf.1.0.0",
+                       "ocf.res.1.0.0", set_device_custom_property, NULL);
+  return ret;
+}
+
+static void
+get_light(oc_request_t *request, oc_interface_mask_t interface, void *user_data)
+{
+  (void)user_data;
+  PRINT("GET_light:\n");
+  oc_rep_start_root_object();
+  switch (interface) {
+  case OC_IF_BASELINE:
+    oc_process_baseline_interface(request->resource);
+  /* fall through */
+  case OC_IF_RW:
+    oc_rep_set_boolean(root, state, light_state);
+    break;
+  default:
+    break;
+  }
+  oc_rep_end_root_object();
+  oc_send_response(request, OC_STATUS_OK);
+  PRINT("Light state %d\n", light_state);
+}
+
+static void
+post_light(oc_request_t *request, oc_interface_mask_t interface, void *user_data)
+{
+  (void)user_data;
+  (void)interface;
+  PRINT("POST_light:\n");
+  bool state = false;
+  oc_rep_t *rep = request->request_payload;
+  while (rep != NULL) {
+    PRINT("key: %s ", oc_string(rep->name));
+    switch (rep->type) {
+    case OC_REP_BOOL:
+      state = rep->value.boolean;
+      PRINT("value: %d\n", state);
+      break;
+    default:
+      oc_send_response(request, OC_STATUS_BAD_REQUEST);
+      return;
+      break;
+    }
+    rep = rep->next;
+  }
+  oc_send_response(request, OC_STATUS_CHANGED);
+  light_state = state;
+}
+
+static void
+put_light(oc_request_t *request, oc_interface_mask_t interface,
+           void *user_data)
+{
+  post_light(request, interface, user_data);
+}
+
+static void
+register_resources(void)
+{
+  oc_resource_t *res = oc_new_resource("lightbulb", "/light/1", 1, 0);
+  oc_resource_bind_resource_type(res, "oic.r.light");
+  oc_resource_bind_resource_interface(res, OC_IF_RW);
+  oc_resource_set_default_interface(res, OC_IF_RW);
+  oc_resource_set_discoverable(res, true);
+  oc_resource_set_periodic_observable(res, 1);
+  oc_resource_set_request_handler(res, OC_GET, get_light, NULL);
+  oc_resource_set_request_handler(res, OC_POST, post_light, NULL);
+  oc_resource_set_request_handler(res, OC_PUT, put_light, NULL);
+  oc_add_resource(res);
+}
+
+static void
+signal_event_loop(void)
+{
+  pthread_mutex_lock(&mutex);
+  pthread_cond_signal(&cv);
+  pthread_mutex_unlock(&mutex);
+}
+
+static void
+handle_signal(int signal)
+{
+  (void)signal;
+  signal_event_loop();
+  quit = 1;
+}
+
+#ifdef CONFIG_BUILD_KERNEL
+int main(int argc, FAR char *argv[])
+#else
+int iotivity_constrained_example_main(int argc, char *argv[])
+#endif
+
+{
+  int init;
+  static const oc_handler_t handler = {.init = app_init,
+                                       .signal_event_loop = signal_event_loop,
+                                       //TODO: tizenrt skiped
+                                       };
+  oc_clock_time_t next_event;
+  
+#ifdef OC_SECURITY
+  oc_storage_config("./server_creds");
+#endif /* OC_SECURITY */
+
+  init = oc_main_init(&handler);
+  if (init < 0)
+    return init;
+
+  while (quit != 1) {
+    next_event = oc_main_poll();
+    pthread_mutex_lock(&mutex);
+    if (next_event == 0) {
+      pthread_cond_wait(&cv, &mutex);
+    } else {
+      ts.tv_sec = (next_event / OC_CLOCK_SECOND);
+      ts.tv_nsec = (next_event % OC_CLOCK_SECOND) * 1.e09 / OC_CLOCK_SECOND;
+      pthread_cond_timedwait(&cv, &mutex, &ts);
+    }
+    pthread_mutex_unlock(&mutex);
+  }
+
+  oc_main_shutdown();
+  return 0;
+}
-- 
2.16.1.windows.1

