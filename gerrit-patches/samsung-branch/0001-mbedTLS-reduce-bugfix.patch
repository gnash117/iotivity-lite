From e365d0e25d9483ca9473a7f09357a1a4a1c44c9f Mon Sep 17 00:00:00 2001
From: Oleksii Beketov <ol.beketov@samsung.com>
Date: Thu, 28 Feb 2019 14:52:03 +0200
Subject: [PATCH] mbedTLS reduce bugfix

Invalid code eliminations in bignum.c fixed

Change-Id: Ia1ada12072a869f3c4ba832ca69b3592817d22ec
Signed-off-by: Oleksii Beketov <ol.beketov@samsung.com>
---
 patches/08_mbedtls-reduce.patch | 90 +++++++++++++++++------------------------
 1 file changed, 36 insertions(+), 54 deletions(-)

diff --git a/patches/08_mbedtls-reduce.patch b/patches/08_mbedtls-reduce.patch
index 347f6dd2..554cb1e5 100644
--- a/patches/08_mbedtls-reduce.patch
+++ b/patches/08_mbedtls-reduce.patch
@@ -1,29 +1,27 @@
-From 102ef9500a3d1d3a21c68b8e553fbd8c46d31db5 Mon Sep 17 00:00:00 2001
+From f722916469219d854667ab6842f2c6fbac6599c0 Mon Sep 17 00:00:00 2001
 From: Oleksii Beketov <ol.beketov@samsung.com>
-Date: Thu, 8 Nov 2018 14:11:09 +0200
+Date: Thu, 28 Feb 2019 14:21:10 +0200
 Subject: [PATCH] Reduce MbedTLS
 
 Reduce MbedTLS routines due memory optimization
 
-Signed-off-by: Oleksii Beketov <ol.beketov@samsung.com>
-Signed-off-by: Aleksey Volkov <a.volkov@samsung.com>
 Signed-off-by: Oleksii Beketov <ol.beketov@samsung.com>
 ---
  include/mbedtls/config.h | 20 ++++++++++++++++----
  include/mbedtls/sha512.h | 18 ------------------
  library/asn1parse.c      | 18 ++++++++++++++++++
- library/bignum.c         | 45 ++++++++++++++++++++++++++++++++++++++++++---
+ library/bignum.c         | 44 ++++++++++++++++++++++++++++++++++++++++++++
  library/ecdsa.c          | 20 ++++++++++++++++++++
  library/pk.c             | 20 ++++++++++++++++++++
  library/pkparse.c        | 20 ++++++++++++++++++++
  library/ssl_cli.c        | 15 +++++++++++++++
- 8 files changed, 151 insertions(+), 25 deletions(-)
+ 8 files changed, 153 insertions(+), 22 deletions(-)
 
 diff --git a/include/mbedtls/config.h b/include/mbedtls/config.h
-index d9e5427..f791c54 100644
+index 0cf4741..7fefd85 100644
 --- a/include/mbedtls/config.h
 +++ b/include/mbedtls/config.h
-@@ -51,17 +51,26 @@
+@@ -52,17 +52,26 @@
  /* mbed TLS modules */
  #define MBEDTLS_AES_C
  #define MBEDTLS_CIPHER_C
@@ -52,7 +50,7 @@ index d9e5427..f791c54 100644
  
  /* Save some RAM by adjusting to your exact needs */
  #define MBEDTLS_PSK_MAX_LEN    16 /* 128-bits keys are generally enough */
-@@ -84,12 +93,13 @@
+@@ -85,12 +94,13 @@
  #define MBEDTLS_BIGNUM_C
  #define MBEDTLS_KEY_EXCHANGE_ECDH_ANON_ENABLED
  #define MBEDTLS_ECDH_C
@@ -68,7 +66,7 @@ index d9e5427..f791c54 100644
  #define MBEDTLS_X509_USE_C
  
  #define MBEDTLS_ASN1_PARSE_C
-@@ -100,7 +110,9 @@
+@@ -101,7 +111,9 @@
  #define MBEDTLS_ASN1_WRITE_C
  #define MBEDTLS_ECDSA_C
  #define MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
@@ -178,26 +176,10 @@ index 4dd65c0..e2e1a96 100644
  
  #endif /* MBEDTLS_ASN1_PARSE_C */
 diff --git a/library/bignum.c b/library/bignum.c
-index 6fdf317..d6fca3a 100644
+index f3b7ef8..17f234c 100644
 --- a/library/bignum.c
 +++ b/library/bignum.c
-@@ -286,6 +286,7 @@ int mbedtls_mpi_safe_cond_swap( mbedtls_mpi *X, mbedtls_mpi *Y, unsigned char sw
-     }
- 
- cleanup:
-+
-     return( ret );
- }
- 
-@@ -419,7 +420,6 @@ static int mpi_get_digit( mbedtls_mpi_uint *d, int radix, char c )
- 
-     if( *d >= (mbedtls_mpi_uint) radix )
-         return( MBEDTLS_ERR_MPI_INVALID_CHARACTER );
--
-     return( 0 );
- }
- 
-@@ -500,6 +500,7 @@ cleanup:
+@@ -504,6 +504,7 @@ cleanup:
   */
  static int mpi_write_hlp( mbedtls_mpi *X, int radix, char **p )
  {
@@ -205,7 +187,7 @@ index 6fdf317..d6fca3a 100644
      int ret;
      mbedtls_mpi_uint r;
  
-@@ -520,6 +521,10 @@ static int mpi_write_hlp( mbedtls_mpi *X, int radix, char **p )
+@@ -524,6 +525,10 @@ static int mpi_write_hlp( mbedtls_mpi *X, int radix, char **p )
  cleanup:
  
      return( ret );
@@ -216,7 +198,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  /*
-@@ -528,6 +533,7 @@ cleanup:
+@@ -532,6 +537,7 @@ cleanup:
  int mbedtls_mpi_write_string( const mbedtls_mpi *X, int radix,
                                char *buf, size_t buflen, size_t *olen )
  {
@@ -224,7 +206,7 @@ index 6fdf317..d6fca3a 100644
      int ret = 0;
      size_t n;
      char *p;
-@@ -596,6 +602,10 @@ cleanup:
+@@ -600,6 +606,10 @@ cleanup:
      mbedtls_mpi_free( &T );
  
      return( ret );
@@ -235,7 +217,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  #if defined(MBEDTLS_FS_IO)
-@@ -1077,6 +1087,7 @@ cleanup:
+@@ -1102,6 +1112,7 @@ cleanup:
   */
  int mbedtls_mpi_add_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint b )
  {
@@ -243,7 +225,7 @@ index 6fdf317..d6fca3a 100644
      mbedtls_mpi _B;
      mbedtls_mpi_uint p[1];
  
-@@ -1086,6 +1097,10 @@ int mbedtls_mpi_add_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint
+@@ -1111,6 +1122,10 @@ int mbedtls_mpi_add_int( mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint
      _B.p = p;
  
      return( mbedtls_mpi_add_mpi( X, A, &_B ) );
@@ -254,7 +236,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  /*
-@@ -1445,6 +1460,7 @@ cleanup:
+@@ -1470,6 +1485,7 @@ cleanup:
   */
  int mbedtls_mpi_div_int( mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A, mbedtls_mpi_sint b )
  {
@@ -262,7 +244,7 @@ index 6fdf317..d6fca3a 100644
      mbedtls_mpi _B;
      mbedtls_mpi_uint p[1];
  
-@@ -1454,6 +1470,10 @@ int mbedtls_mpi_div_int( mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A, m
+@@ -1479,6 +1495,10 @@ int mbedtls_mpi_div_int( mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A, m
      _B.p = p;
  
      return( mbedtls_mpi_div_mpi( Q, R, A, &_B ) );
@@ -273,7 +255,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  /*
-@@ -1484,6 +1504,7 @@ cleanup:
+@@ -1509,6 +1529,7 @@ cleanup:
   */
  int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_sint b )
  {
@@ -281,17 +263,18 @@ index 6fdf317..d6fca3a 100644
      size_t i;
      mbedtls_mpi_uint x, y, z;
  
-@@ -1532,7 +1553,8 @@ int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_
-         y = b - y;
- 
+@@ -1559,6 +1580,10 @@ int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_
      *r = y;
--
-+#endif
-+    oc_abort(__func__);
+ 
      return( 0 );
++#else
++    oc_abort(__func__);
++    return( 0 );
++#endif  /* ST_MBEDTLS_OPT */
  }
  
-@@ -1541,6 +1563,7 @@ int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_
+ /*
+@@ -1566,6 +1591,7 @@ int mbedtls_mpi_mod_int( mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_
   */
  static void mpi_montg_init( mbedtls_mpi_uint *mm, const mbedtls_mpi *N )
  {
@@ -299,7 +282,7 @@ index 6fdf317..d6fca3a 100644
      mbedtls_mpi_uint x, m0 = N->p[0];
      unsigned int i;
  
-@@ -1551,6 +1574,9 @@ static void mpi_montg_init( mbedtls_mpi_uint *mm, const mbedtls_mpi *N )
+@@ -1576,6 +1602,9 @@ static void mpi_montg_init( mbedtls_mpi_uint *mm, const mbedtls_mpi *N )
          x *= ( 2 - ( m0 * x ) );
  
      *mm = ~x + 1;
@@ -309,7 +292,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  /*
-@@ -1559,6 +1585,7 @@ static void mpi_montg_init( mbedtls_mpi_uint *mm, const mbedtls_mpi *N )
+@@ -1584,6 +1613,7 @@ static void mpi_montg_init( mbedtls_mpi_uint *mm, const mbedtls_mpi *N )
  static int mpi_montmul( mbedtls_mpi *A, const mbedtls_mpi *B, const mbedtls_mpi *N, mbedtls_mpi_uint mm,
                           const mbedtls_mpi *T )
  {
@@ -317,19 +300,18 @@ index 6fdf317..d6fca3a 100644
      size_t i, n, m;
      mbedtls_mpi_uint u0, u1, *d;
  
-@@ -1592,8 +1619,10 @@ static int mpi_montmul( mbedtls_mpi *A, const mbedtls_mpi *B, const mbedtls_mpi
-     else
-         /* prevent timing attacks */
+@@ -1619,6 +1649,10 @@ static int mpi_montmul( mbedtls_mpi *A, const mbedtls_mpi *B, const mbedtls_mpi
          mpi_sub_hlp( n, A->p, T->p );
--
+ 
+     return( 0 );
 +#else
 +    oc_abort(__func__);
-     return( 0 );
++    return( 0 );
 +#endif
  }
  
  /*
-@@ -1601,6 +1630,7 @@ static int mpi_montmul( mbedtls_mpi *A, const mbedtls_mpi *B, const mbedtls_mpi
+@@ -1626,6 +1660,7 @@ static int mpi_montmul( mbedtls_mpi *A, const mbedtls_mpi *B, const mbedtls_mpi
   */
  static int mpi_montred( mbedtls_mpi *A, const mbedtls_mpi *N, mbedtls_mpi_uint mm, const mbedtls_mpi *T )
  {
@@ -337,7 +319,7 @@ index 6fdf317..d6fca3a 100644
      mbedtls_mpi_uint z = 1;
      mbedtls_mpi U;
  
-@@ -1608,6 +1638,10 @@ static int mpi_montred( mbedtls_mpi *A, const mbedtls_mpi *N, mbedtls_mpi_uint m
+@@ -1633,6 +1668,10 @@ static int mpi_montred( mbedtls_mpi *A, const mbedtls_mpi *N, mbedtls_mpi_uint m
      U.p = &z;
  
      return( mpi_montmul( A, &U, N, mm, T ) );
@@ -348,7 +330,7 @@ index 6fdf317..d6fca3a 100644
  }
  
  /*
-@@ -1615,6 +1649,7 @@ static int mpi_montred( mbedtls_mpi *A, const mbedtls_mpi *N, mbedtls_mpi_uint m
+@@ -1640,6 +1679,7 @@ static int mpi_montred( mbedtls_mpi *A, const mbedtls_mpi *N, mbedtls_mpi_uint m
   */
  int mbedtls_mpi_exp_mod( mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *E, const mbedtls_mpi *N, mbedtls_mpi *_RR )
  {
@@ -356,7 +338,7 @@ index 6fdf317..d6fca3a 100644
      int ret;
      size_t wbits, wsize, one = 1;
      size_t i, j, nblimbs;
-@@ -1816,6 +1851,10 @@ cleanup:
+@@ -1841,6 +1881,10 @@ cleanup:
          mbedtls_mpi_free( &RR );
  
      return( ret );
-- 
2.16.1.windows.1

