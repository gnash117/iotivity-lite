From 897516a1ae5c1b42e424ec5f8504d155135d5d3b Mon Sep 17 00:00:00 2001
From: George Nash <george.nash@intel.com>
Date: Fri, 6 Dec 2019 14:41:52 -0800
Subject: [PATCH] Add Documentation for add_device and shutdown

Doxygen style documentation added for
 - oc_add_device_cb_t
 - oc_main_shutdown
 - oc_add_device

Change-Id: I2edd61ffcb41d4eaf95ad16c8780eea2cbff02e4
Signed-off-by: George Nash <george.nash@intel.com>
---
 include/oc_api.h | 58 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 58 insertions(+)

diff --git a/include/oc_api.h b/include/oc_api.h
index 19bd402..0f81e62 100644
--- a/include/oc_api.h
+++ b/include/oc_api.h
@@ -150,6 +150,13 @@ typedef struct
 } oc_handler_t;
 
 typedef void (*oc_init_platform_cb_t)(void *data);
+/**
+ * Callback invoked when a device has been added to the stack
+ *
+ * @param data context pointer that comes from the oc_add_device function
+ *
+ * @see oc_add_device
+ */
 typedef void (*oc_add_device_cb_t)(void *data);
 
 /**
@@ -183,11 +190,62 @@ typedef void (*oc_add_device_cb_t)(void *data);
  */
 int oc_main_init(const oc_handler_t *handler);
 oc_clock_time_t oc_main_poll(void);
+
+/**
+ * Shutdown and free all stack related resources
+ */
 void oc_main_shutdown(void);
 
 typedef void (*oc_factory_presets_cb_t)(size_t device, void *data);
 void oc_set_factory_presets_cb(oc_factory_presets_cb_t cb, void *data);
 
+/**
+ * Add an ocf device to the the stack.
+ *
+ * This function is typically called from as part of the stack initialization
+ * process inside the `init` callback handler.
+ *
+ * The `oc_add_device` function may be called as many times as needed.
+ * Each call will add a new device to the stack with its own port address.
+ * Each device is automatically assigned a number starting with zero and
+ * incremented by one each time the function is called. This number is not
+ * returned therefore it is important to know the order devices are added.
+ *
+ * Example:
+ * ```
+ * //app_init is an instance of the `init` callback handler.
+ * static int app_init(void)
+ * {
+ *   int ret = oc_init_platform("Refrigerator", NULL, NULL);
+ *   ret |= oc_add_device("/oic/d", "oic.d.refrigeration", "My fridge",
+ *                        "ocf.2.0.5", "ocf.res.1.0.0,ocf.sh.1.0.0",
+ *                        NULL, NULL);
+ *   ret |= oc_add_device("/oic/d", "oic.d.thermostat", "My thermostat",
+ *                        "ocf.2.0.5", "ocf.res.1.0.0,ocf.sh.1.0.0",
+ *                        NULL, NULL);
+ *   return ret;
+ * }
+ * ```
+ *
+ * @param uri the The device URI.  The wellknown default URI "/oic/d" is hosted
+ *            by every server. Used to device specific information.
+ * @param rt the resource type
+ * @param name the user readable name of the device
+ * @param spec_version The version of the OIC Server.  This is the "icv" device
+ *                     property
+ * @param data_model_version Spec version of the resource and device
+ * specifications to which this device data model is implemtned. This is the
+ * "dmv" device property
+ * @param add_device_cb callback function that will be invoked once device has
+ *                      been added
+ * @param data context pointer that is passed to the oc_add_device_cb_t
+ *
+ * @return
+ *   - `0` on success
+ *   - `-1` on failure
+ *
+ * @see init
+ */
 int oc_add_device(const char *uri, const char *rt, const char *name,
                   const char *spec_version, const char *data_model_version,
                   oc_add_device_cb_t add_device_cb, void *data);
-- 
2.16.1.windows.1

